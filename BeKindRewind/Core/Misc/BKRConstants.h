//
//  BKRConstants.h
//  Pods
//
//  Created by Jordan Zucker on 1/20/16.
//
//

#import <Foundation/Foundation.h>

#ifndef BKRConstants_h
#define BKRConstants_h

#define BKRWeakify(__var) \
__weak __typeof__(__var) __var ## _weak_ = (__var)

#define BKRStrongify(__var) \
_Pragma("clang diagnostic push"); \
_Pragma("clang diagnostic ignored  \"-Wshadow\""); \
__strong __typeof__(__var) __var = __var ## _weak_; \
_Pragma("clang diagnostic pop") \

// the NO if statement doesn't run but is a compiler check to test if the object contains the key
#define BKRKey(object, selector) ({ __typeof(object) testObject = nil; if (NO) { (void)((testObject).selector); } @#selector; })

/**
 *  This is used to add objects associated with a network
 *  call to a scene.
 *
 *  @since 1.0.0
 */
typedef NS_ENUM(NSInteger, BKRRecordingContext) {
    /**
     *  This context should never be intentionally used. It is an error if it is seen.
     *
     *  @since 1.0.0
     */
    BKRRecordingContextUnknown = -1,
    /**
     *  This should occur at the beginning of a recording.
     *
     *  @since 1.0.0
     */
    BKRRecordingContextBeginning,
    /**
     *  This occurs every time the NSURLSessionTask currentRequest is updated.
     *
     *  @since 1.0.0
     */
    BKRRecordingContextAddingCurrentRequest,
    /**
     *  This is associated with a redirect for a NSURLSessionTask
     *
     *  @since 1.0.0
     */
    BKRRecordingContextRedirecting,
    /**
     *  This is associated with a NSURLSessionTask that is executing (such as 
     *  receiving data or a response).
     *
     *  @since 1.0.0
     */
    BKRRecordingContextExecuting,
};

/**
 *  This is used as the key to access the NSURLRequest associated with a redirect.
 *
 *  @since 1.0.0
 */
static NSString * const kBKRRedirectRequestKey = @"BKRRedirectRequestKey";

/**
 *  This is used as the key to access the NSURLResponse associated with a redirect.
 *
 *  @since 1.0.0
 */
static NSString * const kBKRRedirectResponseKey = @"BKRRedirectResponseKey";

/**
 *  This is used as the key to access the unique scene ID generated by BeKindRewind
 *  and used to collate everything associated with a single network action.
 *
 *  @since 1.0.0
 */
static NSString * const kBKRSceneUUIDKey = @"BKRSceneUUIDKey";

/**
 *  Block for execution before a NSURLSessionTask begins recording
 *
 *  @param task NSURLSessionTask that just began executing
 *
 *  @since 1.0.0
 */
typedef void (^BKRBeginRecordingTaskBlock)(NSURLSessionTask *task);

/**
 *  Block for execution after a NSURLSessionTask ends recording
 *
 *  @param task NSURLSessionTask that just finished recording
 *
 *  @since 1.0.0
 */
typedef void (^BKREndRecordingTaskBlock)(NSURLSessionTask *task);


#endif /* BKRConstants_h */
