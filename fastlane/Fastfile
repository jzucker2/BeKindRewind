# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.50.0"

# default_platform :ios

before_all do
  # "This block is executed before every action of all platforms"
end

#Test Lanes
desc "Runs tests and builds example for the given environment"
desc "The lane to run by ci on every commit This lanes calls the lanes `test_framework` and `build_example`."
desc "####Example:"
desc "```\nfastlane ci_commit configuration:Debug --env ios91\n```"
desc "####Options"
desc " * **`configuration`**: The build configuration to use. (`AF_CONFIGURATION`)"
desc ""
lane :ci_commit do |options|
  if options[:configuration]
    configuration = options[:configuration]
  elsif ENV["BKR_CONFIGURATION"]
    configuration = ENV["BKR_CONFIGURATION"]
  else
    configuration = "Release"
  end
  
  test_framework(configuration: configuration)
  
  pod_spec_lint(
    quick:true
  )
end

desc "Runs all tests for the given environment"
desc "Set `scan` action environment variables to control test configuration"
desc "####Example:"
desc "```\nfastlane test_framework configuration:Debug --env ios91\n```"
desc "####Options"
desc " * **`configuration`**: The build configuration to use."
desc ""
lane :test_framework do |options|
  scan(
    configuration: options[:configuration]
  )
  
end

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    
    # increment_build_number

    # xctool # run the tests of your app
  end

  # desc "Deploy a new version to the App Store"
  # lane :deploy do
  #   # snapshot
  #   # sigh
  #   gym # Build your app - more options available
  #   # deliver(force: true)
  #   # frameit
  # end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end





after_all do
  # puts "Executed after every lane of both Mac and iPhone"
  # slack
end



# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
